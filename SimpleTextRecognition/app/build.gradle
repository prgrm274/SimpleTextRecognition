plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 33//32 before androidx.camera:camera-mlkit-vision:1.3.0-beta01

    defaultConfig {
        applicationId "com.programmer2704.simpletextrecognition"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    // Multiple build variant
    signingConfigs {
        release {
            storeFile file("jks1.jks")
//            storeFile file("simpletextrecognition.keystore")
            storePassword 'password' // harus sama dgn ketika generate signed bundle yaitu ketika input password
            keyAlias 'key_alias'
            keyPassword 'password' // harus sama dgn ketika generate signed bundle yaitu ketika input password
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
//            signingConfig signingConfigs.debug // default by gradle
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            buildConfigField "String", "TYPE", '"I AM A DEBUG"'
        }
    }

    flavorDimensions "theme"//, "functionality"

    productFlavors {
        redCam { //red
            dimension "theme"
//            dimension "functionality"
            buildConfigField("String", "APP_THEME", "\"red\"")
            buildConfigField("String", "APP_FUNCTIONALITY", "\"cam\"")
            applicationId "com.programmer2704.simpletextrecognition.redcam"
            manifestPlaceholders = [ appLabel: "RedCamApp" ]
        }

        redFile { //hello
            dimension "theme"
//            dimension "functionality"
            buildConfigField("String", "APP_THEME", "\"red\"")
            buildConfigField("String", "APP_FUNCTIONALITY", "\"file\"")
            applicationId "com.programmer2704.simpletextrecognition.redfile"
            manifestPlaceholders = [ appLabel: "RedFileApp" ]
        }

        greenCam { //hi
            dimension "theme"
//            dimension "functionality"
            buildConfigField("String", "APP_THEME", "\"green\"")
            buildConfigField("String", "APP_FUNCTIONALITY", "\"cam\"")
            applicationId "com.programmer2704.simpletextrecognition.greencam"
            manifestPlaceholders = [ appLabel: "GreenCamApp" ]
        }

        greenFile { //green
            dimension "theme"
//            dimension "functionality"
            buildConfigField("String", "APP_THEME", "\"green\"")
            buildConfigField("String", "APP_FUNCTIONALITY", "\"file\"")
            applicationId "com.programmer2704.simpletextrecognition.greenfile" // No matching client found for package name green
            manifestPlaceholders = [ appLabel: "GreenFileApp" ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    kapt {
        useBuildCache = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // text-recognition
    // Use salah satu
    implementation "com.google.android.gms:play-services-mlkit-text-recognition:18.0.2"
//    implementation 'com.google.firebase:firebase-ml-vision:24.1.0' // newer

    // CameraX
    // core library using the camera2 implementation
    def camerax_version = "1.2.3" // stable release july 2023
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation("androidx.camera:camera-core:${camerax_version}")
    implementation("androidx.camera:camera-camera2:${camerax_version}")
    // If you want to additionally use the CameraX Lifecycle library
    implementation("androidx.camera:camera-lifecycle:${camerax_version}")
    // If you want to additionally use the CameraX VideoCapture library
    implementation("androidx.camera:camera-video:${camerax_version}")
    // If you want to additionally use the CameraX View class
    implementation("androidx.camera:camera-view:${camerax_version}")
    // If you want to additionally add CameraX ML Kit Vision Integration
    implementation("androidx.camera:camera-mlkit-vision:1.3.0-beta01")
    // If you want to additionally use the CameraX Extensions library
    implementation("androidx.camera:camera-extensions:${camerax_version}")

    // ViewModel and Coroutines
//    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'androidx.fragment:fragment-ktx:1.6.0'

    // Tesseract
//    implementation 'com.googlecode.tesseract.android:tess-two:9.1.0'
//    implementation 'com.rmtheis:tess-two:9.1.1'
    // Tesseract4Android
    // To use Standard variant:
//    implementation 'cz.adaptech.tesseract4android:tesseract4android:4.4.0'
    // To use OpenMP variant:
//    implementation 'cz.adaptech.tesseract4android:tesseract4android-openmp:4.4.0'

}